[{"/home/kivel/Desktop/Projects/Link/web/src/styles/global.ts":"1","/home/kivel/Desktop/Projects/Link/web/src/components/Input/index.tsx":"2","/home/kivel/Desktop/Projects/Link/web/src/pages/Login/index.tsx":"3","/home/kivel/Desktop/Projects/Link/web/src/components/Input/styles.ts":"4","/home/kivel/Desktop/Projects/Link/web/src/pages/Login/styles.ts":"5","/home/kivel/Desktop/Projects/Link/web/src/routes/index.tsx":"6","/home/kivel/Desktop/Projects/Link/web/src/components/Button/styles.ts":"7","/home/kivel/Desktop/Projects/Link/web/src/components/Button/index.tsx":"8","/home/kivel/Desktop/Projects/Link/web/src/pages/Register/styles.ts":"9","/home/kivel/Desktop/Projects/Link/web/src/pages/Register/index.tsx":"10","/home/kivel/Desktop/Projects/Link/web/src/pages/Dashboard/index.tsx":"11","/home/kivel/Desktop/Projects/Link/web/src/pages/Dashboard/styles.ts":"12","/home/kivel/Desktop/Projects/Link/web/src/components/Messages/styles.ts":"13","/home/kivel/Desktop/Projects/Link/web/src/index.tsx":"14","/home/kivel/Desktop/Projects/Link/web/src/components/Messages/index.tsx":"15","/home/kivel/Desktop/Projects/Link/web/src/components/Contacts/styles.ts":"16","/home/kivel/Desktop/Projects/Link/web/src/components/Contacts/index.tsx":"17","/home/kivel/Desktop/Projects/Link/web/src/components/AccountInfo/styles.ts":"18","/home/kivel/Desktop/Projects/Link/web/src/components/AccountInfo/index.tsx":"19","/home/kivel/Desktop/Projects/Link/web/src/routes/Route.tsx":"20","/home/kivel/Desktop/Projects/Link/web/src/hooks/apollo.tsx":"21","/home/kivel/Desktop/Projects/Link/web/src/App.tsx":"22","/home/kivel/Desktop/Projects/Link/web/src/utils/getValidationErrors.ts":"23","/home/kivel/Desktop/Projects/Link/web/src/gql/generated/graphql.tsx":"24","/home/kivel/Desktop/Projects/Link/web/src/components/ModalAvatar/index.tsx":"25","/home/kivel/Desktop/Projects/Link/web/src/components/ModalAvatar/styles.ts":"26","/home/kivel/Desktop/Projects/Link/web/src/utils/avatarsArray.ts":"27"},{"size":476,"mtime":1607829240389,"results":"28","hashOfConfig":"29"},{"size":1315,"mtime":1608383274880,"results":"30","hashOfConfig":"31"},{"size":3022,"mtime":1608106933670,"results":"32","hashOfConfig":"31"},{"size":876,"mtime":1608156012985,"results":"33","hashOfConfig":"31"},{"size":1693,"mtime":1608383148470,"results":"34","hashOfConfig":"31"},{"size":499,"mtime":1608329545415,"results":"35","hashOfConfig":"31"},{"size":431,"mtime":1607803766643,"results":"36","hashOfConfig":"31"},{"size":442,"mtime":1608329545411,"results":"37","hashOfConfig":"31"},{"size":1718,"mtime":1608383194187,"results":"38","hashOfConfig":"31"},{"size":3166,"mtime":1608081338466,"results":"39","hashOfConfig":"31"},{"size":7724,"mtime":1608321451040,"results":"40","hashOfConfig":"31"},{"size":5593,"mtime":1608381366333,"results":"41","hashOfConfig":"31"},{"size":1836,"mtime":1608258117567,"results":"42","hashOfConfig":"31"},{"size":198,"mtime":1608329545411,"results":"43","hashOfConfig":"31"},{"size":4280,"mtime":1608320595150,"results":"44","hashOfConfig":"31"},{"size":1717,"mtime":1608258106035,"results":"45","hashOfConfig":"31"},{"size":1924,"mtime":1608383359101,"results":"46","hashOfConfig":"31"},{"size":1170,"mtime":1608238827418,"results":"47","hashOfConfig":"31"},{"size":4101,"mtime":1608329545411,"results":"48","hashOfConfig":"31"},{"size":801,"mtime":1607911194281,"results":"49","hashOfConfig":"50"},{"size":3673,"mtime":1608336493157,"results":"51","hashOfConfig":"31"},{"size":409,"mtime":1607989011497,"results":"52","hashOfConfig":"31"},{"size":326,"mtime":1607993563025,"results":"53","hashOfConfig":"31"},{"size":20889,"mtime":1608329545411,"results":"54","hashOfConfig":"31"},{"size":2841,"mtime":1608329545411,"results":"55","hashOfConfig":"31"},{"size":976,"mtime":1608329545411,"results":"56","hashOfConfig":"31"},{"size":561,"mtime":1608320335616,"results":"57","hashOfConfig":"31"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16p545x",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1p66d3b",{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11dgusd",{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kivel/Desktop/Projects/Link/web/src/styles/global.ts",[],"/home/kivel/Desktop/Projects/Link/web/src/components/Input/index.tsx",[],"/home/kivel/Desktop/Projects/Link/web/src/pages/Login/index.tsx",["116"],"/home/kivel/Desktop/Projects/Link/web/src/components/Input/styles.ts",[],"/home/kivel/Desktop/Projects/Link/web/src/pages/Login/styles.ts",[],"/home/kivel/Desktop/Projects/Link/web/src/routes/index.tsx",[],["117","118","119","120","121"],"/home/kivel/Desktop/Projects/Link/web/src/components/Button/styles.ts",[],"/home/kivel/Desktop/Projects/Link/web/src/components/Button/index.tsx",[],"/home/kivel/Desktop/Projects/Link/web/src/pages/Register/styles.ts",[],"/home/kivel/Desktop/Projects/Link/web/src/pages/Register/index.tsx",[],"/home/kivel/Desktop/Projects/Link/web/src/pages/Dashboard/index.tsx",["122"],"/home/kivel/Desktop/Projects/Link/web/src/pages/Dashboard/styles.ts",[],"/home/kivel/Desktop/Projects/Link/web/src/components/Messages/styles.ts",[],"/home/kivel/Desktop/Projects/Link/web/src/index.tsx",[],"/home/kivel/Desktop/Projects/Link/web/src/components/Messages/index.tsx",["123"],"/home/kivel/Desktop/Projects/Link/web/src/components/Contacts/styles.ts",[],"/home/kivel/Desktop/Projects/Link/web/src/components/Contacts/index.tsx",[],"/home/kivel/Desktop/Projects/Link/web/src/components/AccountInfo/styles.ts",[],"/home/kivel/Desktop/Projects/Link/web/src/components/AccountInfo/index.tsx",[],"/home/kivel/Desktop/Projects/Link/web/src/routes/Route.tsx",[],"/home/kivel/Desktop/Projects/Link/web/src/hooks/apollo.tsx",["124","125"],"import React, { createContext, useCallback, useContext, useState } from 'react';\nimport dotenv from 'dotenv';\nimport {\n  ApolloProvider,\n  ApolloClient,\n  InMemoryCache,\n  HttpLink,\n  split,\n  ApolloLink,\n  Observable,\n} from '@apollo/client';\nimport { getMainDefinition } from '@apollo/client/utilities';\nimport { WebSocketLink } from '@apollo/client/link/ws';\n\ninterface User {\n  id: string;\n  username: string;\n  avatar?: number | undefined | null;\n  about?: string | undefined | null;\n}\n\ninterface AuthState {\n  token: string;\n  user: User;\n}\n\ninterface ApolloContextData {\n  user: User;\n  appLogin(userData: AuthState): void;\n  appLogout(): void;\n  updateUser(user: User): void;\n}\n\nexport const AppStateContext = createContext<ApolloContextData>(\n  {} as ApolloContextData,\n);\n\nconst AppStateProvider: React.FC = ({ children }) => {\n  const [data, setData] = useState<AuthState>(() => {\n    const token = localStorage.getItem('@Link:token');\n    const user = localStorage.getItem('@Link:user');\n\n    if (user && token) {\n      return {\n        token,\n        user: JSON.parse(user),\n      };\n    }\n\n    return {} as AuthState;\n  });\n\n  const appLogin = useCallback(({ token, user }: AuthState) => {\n    localStorage.setItem('@Link:token', token);\n    localStorage.setItem('@Link:user', JSON.stringify(user));\n\n    setData({\n      token,\n      user,\n    });\n  }, []);\n\n  const appLogout = useCallback(() => {\n    localStorage.removeItem('@GoBarber:token');\n    localStorage.removeItem('@GoBarber:user');\n\n    setData({} as AuthState);\n  }, []);\n\n  const updateUser = useCallback(\n    (user: User) => {\n      localStorage.setItem('@Link:user', JSON.stringify(user));\n\n      setData({\n        token: data.token,\n        user,\n      });\n    },\n    [setData, data.token],\n  );\n\n  const cache = new InMemoryCache({});\n  const requestLink = new ApolloLink(\n    (operation, forward) =>\n      new Observable(observer => {\n        let handle: any;\n        Promise.resolve(operation)\n          .then(res => {\n            res.setContext({\n              headers: { authorization: `Bearer ${data.token}` },\n            });\n          })\n          .then(() => {\n            handle = forward(operation).subscribe({\n              next: observer.next.bind(observer),\n              error: observer.error.bind(observer),\n              complete: observer.complete.bind(observer),\n            });\n          })\n          .catch(observer.error.bind(observer));\n        return () => {\n          if (handle) handle.unsubscribe();\n        };\n      }),\n  );\n\n  const httpLink = new HttpLink({\n    uri: process.env.REACT_APP_API_URL || 'http://localhost:4000/graphql',\n  });\n\n  const wsLink = new WebSocketLink({\n    uri: process.env.REACT_APP_API_WS || 'ws://localhost:4000/subscriptions',\n    options: {\n      reconnect: true,\n      connectionParams: {\n        Authorization: data.token,\n      },\n    },\n  });\n\n  const splitLink = split(\n    ({ query }) => {\n      const definition = getMainDefinition(query);\n      return (\n        definition.kind === 'OperationDefinition' &&\n        definition.operation === 'subscription'\n      );\n    },\n    wsLink,\n    httpLink,\n  );\n\n  const client = new ApolloClient({\n    link: ApolloLink.from([requestLink, splitLink]),\n    cache,\n  });\n\n  return (\n    <AppStateContext.Provider\n      value={{\n        user: data.user,\n        appLogin,\n        appLogout,\n        updateUser,\n      }}\n    >\n      <ApolloProvider client={client}>{children}</ApolloProvider>\n    </AppStateContext.Provider>\n  );\n};\n\nfunction useAppState(): ApolloContextData {\n  const context = useContext(AppStateContext);\n\n  return context;\n}\n\nexport { AppStateProvider, useAppState };\n",["126","127","128","129","130"],"/home/kivel/Desktop/Projects/Link/web/src/App.tsx",[],"/home/kivel/Desktop/Projects/Link/web/src/utils/getValidationErrors.ts",[],["131","132","133","134","135"],"/home/kivel/Desktop/Projects/Link/web/src/gql/generated/graphql.tsx",["136","137","138","139","140","141","142","143","144","145","146","147","148","149"],"/home/kivel/Desktop/Projects/Link/web/src/components/ModalAvatar/index.tsx",[],"/home/kivel/Desktop/Projects/Link/web/src/components/ModalAvatar/styles.ts",[],"/home/kivel/Desktop/Projects/Link/web/src/utils/avatarsArray.ts",[],{"ruleId":"150","severity":1,"message":"151","line":65,"column":9,"nodeType":"152","messageId":"153","endLine":65,"endColumn":22},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":110,"column":6,"nodeType":"166","endLine":110,"endColumn":18,"suggestions":"167"},{"ruleId":"164","severity":1,"message":"168","line":96,"column":6,"nodeType":"166","endLine":96,"endColumn":18,"suggestions":"169"},{"ruleId":"170","severity":1,"message":"171","line":2,"column":8,"nodeType":"172","messageId":"173","endLine":2,"endColumn":14},{"ruleId":"174","severity":1,"message":"175","line":86,"column":21,"nodeType":"176","messageId":"177","endLine":86,"endColumn":24,"suggestions":"178"},{"ruleId":"154","replacedBy":"179"},{"ruleId":"156","replacedBy":"180"},{"ruleId":"158","replacedBy":"181"},{"ruleId":"160","replacedBy":"182"},{"ruleId":"162","replacedBy":"183"},{"ruleId":"154","replacedBy":"184"},{"ruleId":"156","replacedBy":"185"},{"ruleId":"158","replacedBy":"186"},{"ruleId":"160","replacedBy":"187"},{"ruleId":"162","replacedBy":"188"},{"ruleId":"174","severity":1,"message":"175","line":20,"column":13,"nodeType":"176","messageId":"177","endLine":20,"endColumn":16,"suggestions":"189"},{"ruleId":"190","severity":1,"message":"191","line":246,"column":8,"nodeType":"192","messageId":"193","endLine":251,"endColumn":2},{"ruleId":"190","severity":1,"message":"191","line":299,"column":8,"nodeType":"192","messageId":"193","endLine":304,"endColumn":2},{"ruleId":"190","severity":1,"message":"191","line":363,"column":8,"nodeType":"192","messageId":"193","endLine":368,"endColumn":2},{"ruleId":"190","severity":1,"message":"191","line":416,"column":8,"nodeType":"192","messageId":"193","endLine":421,"endColumn":2},{"ruleId":"190","severity":1,"message":"191","line":461,"column":8,"nodeType":"192","messageId":"193","endLine":463,"endColumn":2},{"ruleId":"190","severity":1,"message":"191","line":469,"column":8,"nodeType":"192","messageId":"193","endLine":471,"endColumn":2},{"ruleId":"190","severity":1,"message":"191","line":508,"column":8,"nodeType":"192","messageId":"193","endLine":510,"endColumn":2},{"ruleId":"190","severity":1,"message":"191","line":513,"column":8,"nodeType":"192","messageId":"193","endLine":515,"endColumn":2},{"ruleId":"190","severity":1,"message":"191","line":552,"column":8,"nodeType":"192","messageId":"193","endLine":557,"endColumn":2},{"ruleId":"190","severity":1,"message":"191","line":563,"column":8,"nodeType":"192","messageId":"193","endLine":568,"endColumn":2},{"ruleId":"190","severity":1,"message":"191","line":615,"column":8,"nodeType":"192","messageId":"193","endLine":620,"endColumn":2},{"ruleId":"190","severity":1,"message":"191","line":626,"column":8,"nodeType":"192","messageId":"193","endLine":631,"endColumn":2},{"ruleId":"190","severity":1,"message":"191","line":674,"column":8,"nodeType":"192","messageId":"193","endLine":679,"endColumn":2},"no-console","Unexpected console statement.","MemberExpression","unexpected","lines-around-directive",["194"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'messages' and 'toChat.id'. Either include them or remove the dependency array. You can also do a functional update 'setMessages(m => ...)' if you only need 'messages' in the 'setMessages' call.","ArrayExpression",["195"],"React Hook useEffect has missing dependencies: 'lastMessages', 'refetch', and 'toChatId'. Either include them or remove the dependency array. You can also do a functional update 'setLastMessages(l => ...)' if you only need 'lastMessages' in the 'setLastMessages' call.",["196"],"@typescript-eslint/no-unused-vars","'dotenv' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["197","198"],["194"],[],[],[],[],["194"],[],[],[],[],["199","200"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","padding-line-between-statements",{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"messageId":"205","fix":"206","desc":"207"},{"messageId":"208","fix":"209","desc":"210"},{"messageId":"205","fix":"211","desc":"207"},{"messageId":"208","fix":"212","desc":"210"},"Update the dependencies array to be: [messages, newMessage, toChat.id]",{"range":"213","text":"214"},"Update the dependencies array to be: [lastMessages, newMessage, refetch, toChatId]",{"range":"215","text":"216"},"suggestUnknown",{"range":"217","text":"218"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"217","text":"219"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"220","text":"218"},{"range":"220","text":"219"},[2770,2782],"[messages, newMessage, toChat.id]",[2329,2341],"[lastMessages, newMessage, refetch, toChatId]",[1938,1941],"unknown","never",[687,690]]